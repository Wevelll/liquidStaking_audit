/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockDapp,
  MockDappInterface,
} from "../../../../contracts/common/mock/MockDapp";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DAPPS_STAKING",
    outputs: [
      {
        internalType: "contract DappsStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uselessString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082019091526004808252636d6f636b60e01b602090920191825261003c916001916100d7565b50600080546001600160a01b0319166150019081179091556040805163e608d80b60e01b815290516001929163e608d80b916004808301926020929190829003018186803b15801561008d57600080fd5b505afa1580156100a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c59190610170565b6100cf9190610188565b6002556101e6565b8280546100e3906101ab565b90600052602060002090601f016020900481019282610105576000855561014b565b82601f1061011e57805160ff191683800117855561014b565b8280016001018555821561014b579182015b8281111561014b578251825591602001919060010190610130565b5061015792915061015b565b5090565b5b80821115610157576000815560010161015c565b600060208284031215610181578081fd5b5051919050565b6000828210156101a657634e487b7160e01b81526011600452602481fd5b500390565b600181811c908216806101bf57607f821691505b602082108114156101e057634e487b7160e01b600052602260045260246000fd5b50919050565b61026a806101f56000396000f3fe6080604052600436106100385760003560e01c806359b40f41146100445780639bab9c001461009b578063d0b06f5d146100bd57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b506000546100719073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100a757600080fd5b506100b06100e1565b604051610092919061016f565b3480156100c957600080fd5b506100d360025481565b604051908152602001610092565b600180546100ee906101e0565b80601f016020809104026020016040519081016040528092919081815260200182805461011a906101e0565b80156101675780601f1061013c57610100808354040283529160200191610167565b820191906000526020600020905b81548152906001019060200180831161014a57829003601f168201915b505050505081565b6000602080835283518082850152825b8181101561019b5785810183015185820160400152820161017f565b818111156101ac5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c908216806101f457607f821691505b6020821081141561022e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212201a036c67dc58574750be2e7cd94950da8996840e94ed7002bedfbd8d2b8bd68964736f6c63430008040033";

type MockDappConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDappConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDapp__factory extends ContractFactory {
  constructor(...args: MockDappConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockDapp> {
    return super.deploy(overrides || {}) as Promise<MockDapp>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockDapp {
    return super.attach(address) as MockDapp;
  }
  override connect(signer: Signer): MockDapp__factory {
    return super.connect(signer) as MockDapp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDappInterface {
    return new utils.Interface(_abi) as MockDappInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDapp {
    return new Contract(address, _abi, signerOrProvider) as MockDapp;
  }
}
