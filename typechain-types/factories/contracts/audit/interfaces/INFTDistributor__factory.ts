/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  INFTDistributor,
  INFTDistributorInterface,
} from "../../../../contracts/audit/interfaces/INFTDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "utility",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "fee",
        type: "uint8",
      },
    ],
    name: "getBestUtilFee",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDefaultUserFee",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "era",
        type: "uint256",
      },
    ],
    name: "getEra",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eraBegin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eraEnd",
        type: "uint256",
      },
    ],
    name: "getErasData",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "totalData",
        type: "uint256[2]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "utility",
        type: "string",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "era",
        type: "uint256",
      },
    ],
    name: "getUserEraBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "era",
        type: "uint256",
      },
    ],
    name: "getUserEraFee",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "utility",
        type: "string",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserFee",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "utility",
        type: "string",
      },
    ],
    name: "isUnique",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "utility",
        type: "string",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "era",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "updateUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "fee",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "era",
        type: "uint256",
      },
    ],
    name: "updateUserFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class INFTDistributor__factory {
  static readonly abi = _abi;
  static createInterface(): INFTDistributorInterface {
    return new utils.Interface(_abi) as INFTDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): INFTDistributor {
    return new Contract(address, _abi, signerOrProvider) as INFTDistributor;
  }
}
